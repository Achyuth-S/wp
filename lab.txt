right to left 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Right to Left Animation</title>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      overflow-x: hidden;
    }
    #moveContainer {
      position: relative;
      display: inline-block;
      margin-left: 100%;
      transition: margin-left 1s ease;
    }
    table {
      border-collapse: collapse;
      width: 300px;
      margin-bottom: 10px;
    }
    th, td {
      border: 1px solid #000;
      padding: 8px;
      text-align: center;
    }
    tr:nth-child(even) {
      background-color: #f2f2f2;
    }
    tr:nth-child(odd) {
      background-color: #ddd;
    }
    img {
      display: block;
      width: 300px;
    }
    button {
      margin-top: 20px;
    }
  </style>
</head>
<body>

  <div id="moveContainer">
    <table>
      <tr><td>A1</td><td>B1</td><td>C1</td></tr>
      <tr><td>A2</td><td>B2</td><td>C2</td></tr>
      <tr><td>A3</td><td>B3</td><td>C3</td></tr>
    </table>
    <img src="image.png" alt="Sample Image">
  </div>

  <br>
  <button id="moveBtn">Move Right to Left</button>

  <script>
    $(document).ready(function(){
      $('#moveBtn').click(function(){
        $('#moveContainer').animate({
          marginLeft: '50px'
        }, 1000);
      });
    });
  </script>

</body>
</html>
-----------------------------------------------------------------------------------------
calculator to perform basic arithmetic operations

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>jQuery Calculator</title>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 30px;
    }
    .calculator {
      max-width: 300px;
      padding: 20px;
      border: 2px solid #000;
      border-radius: 10px;
    }
    input[type="text"] {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      font-size: 18px;
    }
    .buttons button {
      width: 45%;
      padding: 10px;
      margin: 5px;
      font-size: 16px;
      cursor: pointer;
    }
    #result {
      font-weight: bold;
      margin-top: 15px;
    }
  </style>
</head>
<body>

  <div class="calculator">
    <input type="text" id="num1" placeholder="Enter first number">
    <input type="text" id="num2" placeholder="Enter second number">
    
    <div class="buttons">
      <button id="add">Add (+)</button>
      <button id="sub">Subtract (−)</button><br>
      <button id="mul">Multiply (×)</button>
      <button id="div">Divide (÷)</button>
    </div>

    <div id="result">Result: </div>
  </div>

  <script>
    $(document).ready(function() {
      function calculate(op) {
        const n1 = parseFloat($('#num1').val());
        const n2 = parseFloat($('#num2').val());

        if (isNaN(n1) || isNaN(n2)) {
          $('#result').text('Result: Please enter valid numbers.');
          return;
        }

        let result;
        switch(op) {
          case 'add': result = n1 + n2; break;
          case 'sub': result = n1 - n2; break;
          case 'mul': result = n1 * n2; break;
          case 'div':
            if (n2 === 0) {
              $('#result').text('Result: Cannot divide by zero.');
              return;
            }
            result = n1 / n2;
            break;
        }
        $('#result').text('Result: ' + result);
      }

      $('#add').click(() => calculate('add'));
      $('#sub').click(() => calculate('sub'));
      $('#mul').click(() => calculate('mul'));
      $('#div').click(() => calculate('div'));
    });
  </script>

</body>
</html>
---------------------------------------------------------------------------------------------------
design a birthday card 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Birthday Card Designer</title>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    body {
      font-family: Arial;
      display: flex;
      gap: 20px;
      padding: 20px;
    }
    .controls {
      width: 300px;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    #card {
      width: 300px;
      height: 400px;
      padding: 10px;
      text-align: center;
      position: relative;
    }
    #cardText {
      margin-top: 20px;
    }
    #cardImage {
      margin-top: 20px;
      max-width: 200px;
    }
  </style>
</head>
<body>

  <div class="controls">
    <label>Choose a background color:
      <select id="bgColor">
        <option>Yellow</option>
        <option>Pink</option>
        <option>LightBlue</option>
        <option>White</option>
      </select>
    </label>

    <label>Choose a font:
      <select id="fontFamily">
        <option>Verdana</option>
        <option>Arial</option>
        <option>Times New Roman</option>
        <option>Courier New</option>
      </select>
    </label>

    <label>Specify a numeric font size:
      <input type="number" id="fontSize" value="25">
    </label>

    <label>Choose a border style:</label>
    <label><input type="radio" name="borderStyle" value="none" checked> None</label>
    <label><input type="radio" name="borderStyle" value="double"> Double</label>
    <label><input type="radio" name="borderStyle" value="solid"> Solid</label>

    <label>
      <input type="checkbox" id="showImage" checked> Add the Default Picture
    </label>

    <label>Enter the greeting text below:</label>
    <textarea id="greetingText" rows="3" cols="30">Happy Birthday, and many more</textarea>

    <br><br>
    <button id="updateBtn">Update</button>
  </div>

  <div id="card" style="background-color: yellow; border: 1px solid black;">
    <div id="cardText" style="font-family: Verdana; font-size: 25px;">
      Happy Birthday, and many more
    </div>
    <img id="cardImage" src="image.png" alt="Birthday Cake">
  </div>

  <script>
    $(document).ready(function() {
      $('#updateBtn').click(function() {
        // Background color
        const bgColor = $('#bgColor').val();
        $('#card').css('background-color', bgColor);

        // Font family and size
        const font = $('#fontFamily').val();
        const size = $('#fontSize').val();
        $('#cardText').css({
          'font-family': font,
          'font-size': size + 'px'
        });

        // Border style
        const border = $('input[name="borderStyle"]:checked').val();
        if (border === 'none') {
          $('#card').css('border', 'none');
        } else {
          $('#card').css('border', '4px ' + border + ' black');
        }

        // Image toggle
        const showImage = $('#showImage').is(':checked');
        $('#cardImage').toggle(showImage);

        // Greeting text
        const greeting = $('#greetingText').val();
        $('#cardText').text(greeting);
      });
    });
  </script>

</body>
</html>
---------------------------------------------------------------------------------------------------
Produce Bill 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Bill Generator</title>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    body {
      font-family: Arial;
      padding: 20px;
    }
    label, select, input {
      display: block;
      margin: 10px 0;
    }
  </style>
</head>
<body>

  <h2>Product Billing Page</h2>

  <label for="brand">Select Brand:</label>
  <select id="brand">
    <option>HP</option>
    <option>Nokia</option>
    <option>Samsung</option>
    <option>Motorola</option>
    <option>Apple</option>
  </select>

  <label><input type="checkbox" class="item" value="Mobile"> Mobile</label>
  <label><input type="checkbox" class="item" value="Laptop"> Laptop</label>

  <label for="quantity">Enter Quantity:</label>
  <input type="number" id="quantity" min="1" value="1">

  <button id="produceBill">Produce Bill</button>

  <script>
    $(document).ready(function() {
      const prices = {
        "Mobile": 10000,
        "Laptop": 40000
      };

      $('#produceBill').click(function() {
        let quantity = parseInt($('#quantity').val()) || 0;
        let total = 0;

        $('.item:checked').each(function() {
          let item = $(this).val();
          total += prices[item] * quantity;
        });

        if (total > 0) {
          alert("Total Amount: ₹" + total);
        } else {
          alert("Please select at least one item.");
        }
      });
    });
  </script>

</body>
</html>
---------------------------------------------------------------------------------------------------
bouncing ball 
<!DOCTYPE html>
<html>
<head>
  <title>Bouncing Ball</title>
  <style>
    #box {
      width: 400px;
      height: 400px;
      border: 2px solid #000;
      position: relative;
      overflow: hidden;
    }
    #ball {
      width: 50px;
      height: 50px;
      background-color: red;
      border-radius: 50%;
      position: absolute;
      top: 0;
      left: 175px;
    }
  </style>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

<h2>Bouncing Ball using jQuery</h2>
<div id="box">
  <div id="ball"></div>
</div>

<script>
  function bounceBall() {
    $("#ball").animate(
      { top: "350px" }, 
      500, 
      "swing", 
      function() {
        $("#ball").animate(
          { top: "0px" }, 
          500, 
          "swing", 
          bounceBall // call again to loop
        );
      }
    );
  }

  $(document).ready(function(){
    bounceBall();
  });
</script>

</body>
</html>
---------------------------------------------------------------------------------------------------
displays images and shows the sliding text on the image
<!DOCTYPE html>
<html>
<head>
  <title>Image with Sliding Text</title>
  <style>
    .image-container {
      position: relative;
      width: 400px;
      height: 250px;
      margin: 20px auto;
      border: 2px solid #000;
      overflow: hidden;
    }

    .image-container img {
      width: 100%;
      height: 100%;
      display: block;
    }

    .caption {
      position: absolute;
      bottom: -50px;
      left: 0;
      width: 100%;
      background-color: rgba(0,0,0,0.7);
      color: #fff;
      text-align: center;
      padding: 10px;
      font-size: 18px;
    }
  </style>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

<h2 style="text-align:center;">Image with Sliding Text (jQuery)</h2>

<div class="image-container">
  <img src="https://via.placeholder.com/400x250" alt="Sample Image">
  <div class="caption">Hello! I am sliding text.</div>
</div>

<script>
  $(document).ready(function(){
    $('.image-container').hover(
      function(){
        $(this).find('.caption').stop().animate({bottom: '0px'}, 500);
      },
      function(){
        $(this).find('.caption').stop().animate({bottom: '-50px'}, 500);
      }
    );
  });
</script>

</body>
</html>
---------------------------------------------------------------------------------------------------
student bio-data form 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Student Bio-Data Form</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f0f8ff;
    }
    .form-container {
      background-color: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      max-width: 800px;
      margin: auto;
    }
    .form-title {
      text-align: center;
      margin-bottom: 25px;
      font-weight: bold;
    }
  </style>
</head>
<body>

<div class="container mt-5">
  <div class="form-container">
    <h3 class="form-title">Student Bio-Data Form</h3>
    <form>
      <div class="row mb-3">
        <div class="col-md-6">
          <label for="name" class="form-label">Full Name</label>
          <input type="text" class="form-control" id="name" placeholder="Enter full name">
        </div>
        <div class="col-md-6">
          <label for="dob" class="form-label">Date of Birth</label>
          <input type="date" class="form-control" id="dob">
        </div>
      </div>

      <div class="row mb-3">
        <div class="col-md-6">
          <label for="email" class="form-label">Email ID</label>
          <input type="email" class="form-control" id="email" placeholder="Enter email">
        </div>
        <div class="col-md-6">
          <label for="phone" class="form-label">Phone Number</label>
          <input type="text" class="form-control" id="phone" placeholder="Enter phone number">
        </div>
      </div>

      <div class="mb-3">
        <label class="form-label d-block">Gender</label>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="radio" name="gender" id="male" value="Male">
          <label class="form-check-label" for="male">Male</label>
        </div>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="radio" name="gender" id="female" value="Female">
          <label class="form-check-label" for="female">Female</label>
        </div>
      </div>

      <div class="mb-3">
        <label class="form-label">Address</label>
        <textarea class="form-control" rows="3" placeholder="Enter your address"></textarea>
      </div>

      <div class="mb-3">
        <label class="form-label d-block">Hobbies</label>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="checkbox" id="reading" value="Reading">
          <label class="form-check-label" for="reading">Reading</label>
        </div>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="checkbox" id="sports" value="Sports">
          <label class="form-check-label" for="sports">Sports</label>
        </div>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="checkbox" id="music" value="Music">
          <label class="form-check-label" for="music">Music</label>
        </div>
      </div>

      <div class="mb-4">
        <label for="qualification" class="form-label">Qualification</label>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>Exam</th>
              <th>Board/University</th>
              <th>Year</th>
              <th>Percentage</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><input type="text" class="form-control" placeholder="e.g., 10th"></td>
              <td><input type="text" class="form-control"></td>
              <td><input type="text" class="form-control"></td>
              <td><input type="text" class="form-control"></td>
            </tr>
            <tr>
              <td><input type="text" class="form-control" placeholder="e.g., 12th"></td>
              <td><input type="text" class="form-control"></td>
              <td><input type="text" class="form-control"></td>
              <td><input type="text" class="form-control"></td>
            </tr>
          </tbody>
        </table>
      </div>

      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>
</div>

</body>
</html>
---------------------------------------------------------------------------------------------------
database-oriented CRUD operation
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Employee CRUD</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .container {
      margin-top: 40px;
    }
    .form-section {
      background-color: #f8f9fa;
      padding: 25px;
      border-radius: 10px;
      margin-bottom: 30px;
    }
    .table-section {
      border-radius: 10px;
    }
  </style>
</head>
<body>

<div class="container">
  <h2 class="text-center mb-4">Employee Management</h2>

  <!-- Form -->
  <div class="form-section">
    <form id="employeeForm">
      <input type="hidden" id="rowIndex" />
      <div class="row mb-3">
        <div class="col-md-4">
          <label for="empName" class="form-label">Employee Name</label>
          <input type="text" class="form-control" id="empName" required>
        </div>
        <div class="col-md-4">
          <label for="empEmail" class="form-label">Email</label>
          <input type="email" class="form-control" id="empEmail" required>
        </div>
        <div class="col-md-4">
          <label for="empDept" class="form-label">Department</label>
          <input type="text" class="form-control" id="empDept" required>
        </div>
      </div>
      <button type="submit" class="btn btn-success">Save</button>
      <button type="button" class="btn btn-secondary" onclick="resetForm()">Reset</button>
    </form>
  </div>

  <!-- Table -->
  <div class="table-section">
    <table class="table table-bordered text-center" id="employeeTable">
      <thead class="table-dark">
        <tr>
          <th>#</th>
          <th>Name</th>
          <th>Email</th>
          <th>Department</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
</div>

<script>
  let employees = [];

  function renderTable() {
    const tbody = document.querySelector("#employeeTable tbody");
    tbody.innerHTML = "";
    employees.forEach((emp, index) => {
      const row = `<tr>
        <td>${index + 1}</td>
        <td>${emp.name}</td>
        <td>${emp.email}</td>
        <td>${emp.dept}</td>
        <td>
          <button class="btn btn-sm btn-warning" onclick="editEmployee(${index})">Edit</button>
          <button class="btn btn-sm btn-danger" onclick="deleteEmployee(${index})">Delete</button>
        </td>
      </tr>`;
      tbody.innerHTML += row;
    });
  }

  document.getElementById("employeeForm").addEventListener("submit", function (e) {
    e.preventDefault();
    const name = document.getElementById("empName").value;
    const email = document.getElementById("empEmail").value;
    const dept = document.getElementById("empDept").value;
    const index = document.getElementById("rowIndex").value;

    const employee = { name, email, dept };

    if (index === "") {
      employees.push(employee); // create
    } else {
      employees[index] = employee; // update
    }

    renderTable();
    resetForm();
  });

  function editEmployee(index) {
    const emp = employees[index];
    document.getElementById("empName").value = emp.name;
    document.getElementById("empEmail").value = emp.email;
    document.getElementById("empDept").value = emp.dept;
    document.getElementById("rowIndex").value = index;
  }

  function deleteEmployee(index) {
    if (confirm("Are you sure you want to delete this record?")) {
      employees.splice(index, 1);
      renderTable();
    }
  }

  function resetForm() {
    document.getElementById("employeeForm").reset();
    document.getElementById("rowIndex").value = "";
  }
</script>

</body>
</html>
---------------------------------------------------------------------------------------------------
page into 2 parts top and bottom, then divide the bottom into 3 parts
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Bootstrap Layout</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f0f2f5;
    }
    .section {
      padding: 20px;
    }
    .card {
      height: 100%;
    }
  </style>
</head>
<body>

<div class="container-fluid mt-4">

  <!-- TOP SECTION -->
  <div class="section bg-light border rounded mb-4">
    <h4 class="mb-3">
      Top Section 
      <span class="badge bg-primary">Info</span>
    </h4>

    <div class="input-group mb-3">
      <span class="input-group-text">@</span>
      <input type="text" class="form-control" placeholder="Username">
    </div>

    <div class="input-group mb-3">
      <input type="text" class="form-control" placeholder="Recipient's username">
      <span class="input-group-text">@example.com</span>
    </div>

    <div class="btn-group" role="group" aria-label="Basic example">
      <button type="button" class="btn btn-outline-primary">Left</button>
      <button type="button" class="btn btn-outline-primary">Middle</button>
      <button type="button" class="btn btn-outline-primary">Right</button>
    </div>
  </div>

  <!-- BOTTOM SECTION -->
  <div class="row">

    <!-- LEFT -->
    <div class="col-md-4 mb-3">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title">Left Section <span class="badge bg-warning text-dark">New</span></h5>
          <div class="input-group mb-2">
            <span class="input-group-text">#</span>
            <input type="text" class="form-control" placeholder="ID">
          </div>
          <button class="btn btn-success w-100">Submit</button>
        </div>
      </div>
    </div>

    <!-- CENTER -->
    <div class="col-md-4 mb-3">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title">Middle Section</h5>
          <div class="input-group mb-2">
            <span class="input-group-text">💬</span>
            <input type="text" class="form-control" placeholder="Comments">
          </div>
          <div class="btn-group w-100" role="group">
            <button class="btn btn-outline-secondary">👍</button>
            <button class="btn btn-outline-secondary">👎</button>
          </div>
        </div>
      </div>
    </div>

    <!-- RIGHT -->
    <div class="col-md-4 mb-3">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title">Right Section</h5>
          <div class="input-group mb-2">
            <span class="input-group-text">💡</span>
            <input type="text" class="form-control" placeholder="Suggestions">
          </div>
          <button class="btn btn-info w-100 text-white">Send</button>
        </div>
      </div>
    </div>

  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
---------------------------------------------------------------------------------------------------
class timetable 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Class Timetable</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container my-4">

  <!-- Carousel -->
  <div id="announcementCarousel" class="carousel slide mb-4" data-bs-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <img src="https://via.placeholder.com/900x250?text=Welcome+to+Class" class="d-block w-100" alt="Welcome">
      </div>
      <div class="carousel-item">
        <img src="https://via.placeholder.com/900x250?text=Check+Timetable" class="d-block w-100" alt="Timetable">
      </div>
      <div class="carousel-item">
        <img src="https://via.placeholder.com/900x250?text=Events+Coming+Soon" class="d-block w-100" alt="Events">
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#announcementCarousel" data-bs-slide="prev">
      <span class="carousel-control-prev-icon"></span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#announcementCarousel" data-bs-slide="next">
      <span class="carousel-control-next-icon"></span>
    </button>
  </div>

  <!-- Timetable Table -->
  <h3 class="text-center mb-3">Class Timetable</h3>
  <div class="table-responsive">
    <table class="table table-bordered table-striped text-center align-middle">
      <thead class="table-dark">
        <tr>
          <th>Day / Time</th>
          <th>9:00 - 10:00</th>
          <th>10:00 - 11:00</th>
          <th>11:00 - 12:00</th>
          <th>12:00 - 1:00</th>
          <th>1:00 - 2:00</th>
          <th>2:00 - 3:00</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Monday</td>
          <td>Math</td>
          <td>Physics</td>
          <td>Break</td>
          <td>Chemistry</td>
          <td>Lunch</td>
          <td>CS</td>
        </tr>
        <tr>
          <td>Tuesday</td>
          <td>CS</td>
          <td>Math</td>
          <td>Break</td>
          <td>Physics</td>
          <td>Lunch</td>
          <td>Workshop</td>
        </tr>
        <tr>
          <td>Wednesday</td>
          <td>Chemistry</td>
          <td>Math</td>
          <td>Break</td>
          <td>CS</td>
          <td>Lunch</td>
          <td>Lab</td>
        </tr>
        <tr>
          <td>Thursday</td>
          <td>English</td>
          <td>CS</td>
          <td>Break</td>
          <td>Math</td>
          <td>Lunch</td>
          <td>Physics</td>
        </tr>
        <tr>
          <td>Friday</td>
          <td>Workshop</td>
          <td>English</td>
          <td>Break</td>
          <td>CS</td>
          <td>Lunch</td>
          <td>Sports</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
-----------------------------------------------------------------------------------------------------------------------------------------------------------
print mean, variance and 
standard deviation with suitable messages.
import math

# Read N numbers from the user
n = int(input("Enter how many numbers: "))
numbers = []

for i in range(n):
    num = float(input(f"Enter number {i+1}: "))
    numbers.append(num)

# Calculate mean
mean = sum(numbers) / n

# Calculate variance
variance = sum((x - mean) ** 2 for x in numbers) / n

# Calculate standard deviation
std_dev = math.sqrt(variance)

# Output results
print(f"\nNumbers: {numbers}")
print(f"Mean: {mean:.2f}")
print(f"Variance: {variance:.2f}")
print(f"Standard Deviation: {std_dev:.2f}")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
like Name, roll no, department, address, Gender, and Marks in three subjects
# Define student structure
class Student:
    def __init__(self, name, roll_no, dept, address, gender, marks):
        self.name = name
        self.roll_no = roll_no
        self.dept = dept
        self.address = address
        self.gender = gender
        self.marks = marks
        self.total = sum(marks)
        self.percentage = self.total / len(marks)

# Input number of students
n = int(input("Enter number of students: "))
students = []

# Read details for each student
for i in range(n):
    print(f"\nEnter details for student {i+1}:")
    name = input("Name: ")
    roll_no = input("Roll No: ")
    dept = input("Department: ")
    address = input("Address: ")
    gender = input("Gender: ")
    marks = []
    for j in range(3):
        m = float(input(f"Marks in subject {j+1}: "))
        marks.append(m)
    students.append(Student(name, roll_no, dept, address, gender, marks))

# Display student details
print("\n--- Student Details ---")
for s in students:
    print(f"\nName: {s.name}\nRoll No: {s.roll_no}\nDepartment: {s.dept}")
    print(f"Address: {s.address}\nGender: {s.gender}")
    print(f"Marks: {s.marks}")
    print(f"Total Marks: {s.total}")
    print(f"Percentage: {s.percentage:.2f}%")

# Find student with max and min total
max_student = max(students, key=lambda x: x.total)
min_student = min(students, key=lambda x: x.total)

# Find failed students (any subject < 10)
failed_students = [s.name for s in students if any(m < 10 for m in s.marks)]

# Output results
print(f"\nTopper: {max_student.name} with {max_student.total} marks")
print(f"Lowest Scorer: {min_student.name} with {min_student.total} marks")

if failed_students:
    print("Failed Students (marks < 10 in any subject):")
    for name in failed_students:
        print(f"- {name}")
else:
    print("No failed students.")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
program to print 10 most frequently appearing words in a text file
from collections import Counter

# Read text from a file
with open("sample.txt", "r") as file:
    text = file.read().lower()

# Remove punctuation (optional, for better accuracy)
import string
for ch in string.punctuation:
    text = text.replace(ch, " ")

# Split into words and count frequencies
words = text.split()
word_counts = Counter(words)

# Get the 10 most common words
top_10 = word_counts.most_common(10)

# Display the results
print("Top 10 most frequent words:")
for word, count in top_10:
    print(f"{word}: {count}")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
sort the contents of a text file and write the sorted contents into a separate text file
# Open and read lines from the input file
with open("input.txt", "r") as infile:
    lines = infile.readlines()

# Strip newline characters and whitespace
stripped_lines = [line.strip() for line in lines]

# Sort the lines
stripped_lines.sort()

# Write sorted lines to a new output file
with open("sorted_output.txt", "w") as outfile:
    for line in stripped_lines:
        outfile.write(line + "\n")

print("File sorted and saved as 'sorted_output.txt'")

-----------------------------------------------------------------------------------------------------------------------------------------------------------
unique subsets from a set of distinct integers 
class SubsetGenerator:
    def __init__(self, nums):
        self.nums = nums
        self.result = []

    def generate_subsets(self):
        self._backtrack(0, [])
        return self.result

    def _backtrack(self, index, current):
        self.result.append(current[:])
        for i in range(index, len(self.nums)):
            current.append(self.nums[i])
            self._backtrack(i + 1, current)
            current.pop()

# User input
input_str = input("Enter distinct integers separated by spaces: ")
nums = list(map(int, input_str.strip().split()))

generator = SubsetGenerator(nums)
subsets = generator.generate_subsets()

print("\nAll unique subsets:")
for subset in subsets:
    print(subset)
-----------------------------------------------------------------------------------------------------------------------------------------------------------
a pair of elements (indices of the two numbers) from a given array 
class PairFinder:
    def __init__(self, nums, target):
        self.nums = nums
        self.target = target

    def find_pair(self):
        seen = {}
        for i, num in enumerate(self.nums):
            complement = self.target - num
            if complement in seen:
                return (seen[complement], i)
            seen[num] = i
        return None

# User Input
nums = list(map(int, input("Enter list of integers separated by spaces: ").strip().split()))
target = int(input("Enter the target sum: "))

finder = PairFinder(nums, target)
result = finder.find_pair()

if result:
    print(f"Pair found at indices: {result[0]} and {result[1]}")
    print(f"Values: {nums[result[0]]} + {nums[result[1]]} = {target}")
else:
    print("No pair found with the given target sum.")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
store the item details,  
     where the key is the item_id and the value is a dictionary containin g the item_name, stock_count, and   
     price.

class Inventory:
    def __init__(self):
        self.items = {}

    def add_item(self, item_id, name, stock, price):
        self.items[item_id] = {
            'name': name,
            'stock': stock,
            'price': price
        }
        print("Item added!")

    def update_item(self, item_id, stock, price):
        if item_id in self.items:
            self.items[item_id]['stock'] = stock
            self.items[item_id]['price'] = price
            print("Item updated!")
        else:
            print("Item not found!")

    def check_item(self, item_id):
        if item_id in self.items:
            item = self.items[item_id]
            print(f"Name: {item['name']}, Stock: {item['stock']}, Price: {item['price']}")
        else:
            print("Item not found!")

# Main code
inv = Inventory()

while True:
    print("\n1. Add Item\n2. Update Item\n3. Check Item\n4. Exit")
    choice = input("Choose an option: ")

    if choice == '1':
        id = input("Enter ID: ")
        name = input("Enter Name: ")
        stock = int(input("Enter Stock: "))
        price = float(input("Enter Price: "))
        inv.add_item(id, name, stock, price)

    elif choice == '2':
        id = input("Enter ID: ")
        stock = int(input("Enter new Stock: "))
        price = float(input("Enter new Price: "))
        inv.update_item(id, stock, price)

    elif choice == '3':
        id = input("Enter ID: ")
        inv.check_item(id)

    elif choice == '4':
        break

    else:
        print("Invalid choice.")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Python class Restaurant with attributes like menu_items, book_table, 

class Restaurant:
    def __init__(self):
        self.menu_items = {}           # item_name: price
        self.booked_tables = []        # list of table numbers
        self.customer_orders = {}      # table_number: [list of items]

    def add_item_to_menu(self, item, price):
        self.menu_items[item] = price
        print(f"Added '{item}' to menu for ₹{price}")

    def book_table(self, table_number):
        if table_number in self.booked_tables:
            print(f"Table {table_number} is already booked.")
        else:
            self.booked_tables.append(table_number)
            print(f"Table {table_number} booked successfully!")

    def customer_order(self, table_number, items):
        if table_number not in self.booked_tables:
            print(f"Table {table_number} is not booked.")
            return
        if table_number not in self.customer_orders:
            self.customer_orders[table_number] = []
        self.customer_orders[table_number].extend(items)
        print(f"Order taken for table {table_number}: {items}")

    def print_menu(self):
        print("\n--- MENU ---")
        for item, price in self.menu_items.items():
            print(f"{item}: ₹{price}")

    def print_bookings(self):
        print("\n--- Booked Tables ---")
        print(self.booked_tables)

    def print_orders(self):
        print("\n--- Customer Orders ---")
        for table, orders in self.customer_orders.items():
            print(f"Table {table}: {orders}")

# Main interaction
r = Restaurant()

while True:
    print("\n1. Add Menu Item\n2. Book Table\n3. Take Order\n4. Show Menu\n5. Show Bookings\n6. Show Orders\n7. Exit")
    choice = input("Enter choice: ")

    if choice == '1':
        item = input("Enter item name: ")
        price = float(input("Enter price: "))
        r.add_item_to_menu(item, price)

    elif choice == '2':
        table = int(input("Enter table number to book: "))
        r.book_table(table)

    elif choice == '3':
        table = int(input("Enter table number: "))
        items = input("Enter items (comma-separated): ").split(',')
        items = [item.strip() for item in items]
        r.customer_order(table, items)

    elif choice == '4':
        r.print_menu()

    elif choice == '5':
        r.print_bookings()

    elif choice == '6':
        r.print_orders()

    elif choice == '7':
        print("Exiting...")
        break

    else:
        print("Invalid choice.")

